import marked from 'marked';
import { GetStaticPathsResult, GetStaticPropsContext, GetStaticPropsResult, NextPage } from 'next';
import Head from 'next/head';

import Layout from '../../components/layout';
import Post from '../../components/post';
import { tryGetSubreddit } from '../../lib/reddit';
import styles from '../../styles/Subreddit.module.css';

type Props = {
  subredditName: string;
  subreddit: any;
};

const Subreddit: NextPage<Props> = (props: Props) => {
  const [posts, setPosts] = useState<any>(props.subreddit.posts);
  return (
    <Layout title={props.subredditName}>
      <Head>
        <title>Subreddit {props.subredditName}</title>
        <meta name="description" content="Generated by create next app" />
        <link rel="icon" href="/favicon.ico" />
      </Head>

      {posts?.length
        ? posts.map((post: any) => (
            <div key={post.id} className={styles.post}>
              <Post post={post} />
            </div>
          ))
        : "No posts found"}
    </Layout>
  );
};

export function getStaticPaths(): GetStaticPathsResult {
  return {
    paths: ["/r/gonewildstories", "/r/talesfromtechsupport"],
    fallback: "blocking",
  };
}

export async function getStaticProps(
  context: GetStaticPropsContext<Props>
): Promise<GetStaticPropsResult<Props>> {
  const subredditName = context.params?.subreddit;

  if (!subredditName) {
    return {
      notFound: true,
    };
  }

  let subreddit = await tryGetSubreddit(subredditName);

  if (!subreddit) {
    return {
      notFound: true,
    };
  }

  return {
    props: {
      subredditName,
      subreddit,
    },
    revalidate: 300,
  };
}

export default Subreddit;
